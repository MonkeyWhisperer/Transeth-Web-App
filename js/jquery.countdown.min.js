!function (t) { "use strict"; "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery) }(function (t) { "use strict"; function e(t) { return function (e) { var n = e.match(/%(-|!)?[A-Z]{1}(:[^;]+;)?/gi); if (n) for (var i = 0, o = n.length; o > i; ++i) { var r = n[i].match(/%(-|!)?([a-zA-Z]{1})(:[^;]+;)?/), h = new RegExp(r[0]), l = r[1] || "", c = r[3] || "", u = null; r = r[2], a.hasOwnProperty(r) && (u = a[r], u = Number(t[u])), null !== u && ("!" === l && (u = s(c, u)), "" === l && 10 > u && (u = "0" + u.toString()), e = e.replace(h, u.toString())) } return e.replace(/%%/, "%") } } function s(t, e) { var s = "s", n = ""; return t && (1 === (t = t.replace(/(:|;|\s)/gi, "").split(/\,/)).length ? s = t[0] : (n = t[0], s = t[1])), 1 === Math.abs(e) ? n : s } var n = [], i = []; i.push(/^[0-9]*$/.source), i.push(/([0-9]{1,2}\/){2}[0-9]{4}( [0-9]{1,2}(:[0-9]{2}){2})?/.source), i.push(/[0-9]{4}([\/\-][0-9]{1,2}){2}( [0-9]{1,2}(:[0-9]{2}){2})?/.source), i = new RegExp(i.join("|")); var a = { Y: "years", m: "months", w: "weeks", d: "days", D: "totalDays", H: "hours", M: "minutes", S: "seconds" }, o = function (e, s, i) { this.el = e, this.$el = t(e), this.interval = null, this.offset = {}, this.instanceNumber = n.length, n.push(this), this.$el.data("countdown-instance", this.instanceNumber), i && (this.$el.on("update.countdown", i), this.$el.on("stoped.countdown", i), this.$el.on("finish.countdown", i)), this.setFinalDate(s), this.start() }; t.extend(o.prototype, { start: function () { null !== this.interval && clearInterval(this.interval); var t = this; this.update(), this.interval = setInterval(function () { t.update.call(t) }, 100) }, stop: function () { clearInterval(this.interval), this.interval = null, this.dispatchEvent("stoped") }, pause: function () { this.stop.call(this) }, resume: function () { this.start.call(this) }, remove: function () { this.stop(), n[this.instanceNumber] = null, delete this.$el.data().countdownInstance }, setFinalDate: function (t) { this.finalDate = function (t) { if (t instanceof Date) return t; if (String(t).match(i)) return String(t).match(/^[0-9]*$/) && (t = Number(t)), String(t).match(/\-/) && (t = String(t).replace(/\-/g, "/")), new Date(t); throw new Error("Couldn't cast `" + t + "` to a date object.") }(t) }, update: function () { return 0 === this.$el.closest("html").length ? void this.remove() : (this.totalSecsLeft = this.finalDate.getTime() - (new Date).getTime(), this.totalSecsLeft = Math.ceil(this.totalSecsLeft / 1e3), this.totalSecsLeft = this.totalSecsLeft < 0 ? 0 : this.totalSecsLeft, this.offset = { seconds: this.totalSecsLeft % 60, minutes: Math.floor(this.totalSecsLeft / 60) % 60, hours: Math.floor(this.totalSecsLeft / 60 / 60) % 24, days: Math.floor(this.totalSecsLeft / 60 / 60 / 24) % 7, totalDays: Math.floor(this.totalSecsLeft / 60 / 60 / 24), weeks: Math.floor(this.totalSecsLeft / 60 / 60 / 24 / 7), months: Math.floor(this.totalSecsLeft / 60 / 60 / 24 / 30), years: Math.floor(this.totalSecsLeft / 60 / 60 / 24 / 365) }, void (0 === this.totalSecsLeft ? (this.stop(), this.dispatchEvent("finish")) : this.dispatchEvent("update"))) }, dispatchEvent: function (s) { var n = t.Event(s + ".countdown"); n.finalDate = this.finalDate, n.offset = t.extend({}, this.offset), n.strftime = e(this.offset), this.$el.trigger(n) } }), t.fn.countdown = function () { var e = Array.prototype.slice.call(arguments, 0); return this.each(function () { var s = t(this).data("countdown-instance"); if (void 0 !== s) { var i = n[s], a = e[0]; o.prototype.hasOwnProperty(a) ? i[a].apply(i, e.slice(1)) : null === String(a).match(/^[$A-Z_][0-9A-Z_$]*$/i) ? (i.setFinalDate.call(i, a), i.start()) : t.error("Method %s does not exist on jQuery.countdown".replace(/\%s/gi, a)) } else new o(this, e[0], e[1]) }) } });